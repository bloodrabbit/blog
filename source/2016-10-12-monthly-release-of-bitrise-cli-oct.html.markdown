---
title: Monthly release of Bitrise CLI (Oct)
date: 2016-10-12 11:12 UTC
tags: announcement, CLI
authors: Kriszti√°n G√∂drei|krisztiangodrei@bitrise.io
---

> We ship a new bitrise cli version on the second Tuesday of every month.
> The new release will be available on the [bitrise.io](https://www.bitrise.io)
> virtual machines on the weekend after the CLI release,
> unless we discover any serious bug / regression.

Read on to learn more about this month's [Bitrise CLI](https://github.com/bitrise-io/bitrise) release and about the changes around bitrise tools and steps.

## New version of Bitrise CLI (1.4.1)

Bitrise 1.4.1 major features:

- Tag trigger event handling
- Bitrise-cli global flag fix
- Output envstore cleanup
- Bash toolkit entry file support
- Dependency update

### Tag trigger event handling üè∑

bitrise-cli 1.4.0 got a new trigger map syntax, to allow setting more specific and flexible trigger events.

Full proposal is available on [GitHub](https://github.com/bitrise-io/bitrise.io/issues/40).

The new trigger map is completed with __tag event__ support:

<pre><code>- tag: TAG_PATTERN
  workflow: WORKFLOW_NAME
</code></pre>

example:


<pre><code>- tag: *.*.*
  workflow: deploy
</code></pre>

__The new tag event support will be available on [bitrise.io](https://www.bitrise.io) soon.__


### bitrise-cli global flag fix üö©

Fixed _Pull Request Mode_ and _CI Mode_ global flag (`--pr` and `--ci`) handling.

_Pull Request Mode_ and _CI Mode_ global flags are available in `run`, `trigger` and `trigger-check` commands.

From now `bitrise --pr COMMAND` will run in _Pull Request Mode_, regardless of what is set in environments or in secrets.

`bitrise --pr=false COMMAND` will __NOT__ run in _Pull Request Mode_,  regardless of what is set in environments or in secrets.

Similarly `bitrise --ci COMMAND` will perform the command in _CI Mode_, regardless of what is set in environments or in secrets and
`bitrise --ci=false COMMAND` will __NOT__ run in _CI Mode_, regardless of what is set in environments or in secrets.


#### Output envstore cleanup  üõÄ

In previous versions of `bitrise-cli` the output envstore (which is a container for the step output environments) was not cleared after processing its content.

This caused bitrise-cli to duplicate every output environment that was generated by a step, after every following step run, which is not what we intended in the first place.


#### Bash toolkit entry file support üõ†

_Toolkit support is still in beta and details of it might change in following CLI releases._

Before this release, the bash-toolkit step's entry file was the hardcoded `step.sh`. From now on these steps can specify the entry file path in the `step.yml`.

Example:


<pre><code>...
toolkit:
  bash:
    entry_file: step_entry.sh
...
</code></pre>

#### Dependency updates ‚¨ÜÔ∏è

- `stepman` min version updated to: [0.9.24](https://github.com/bitrise-io/stepman/releases/tag/0.9.24)
- `analytics plugin` version updated to [0.9.5](https://github.com/bitrise-core/bitrise-plugins-analytics/releases/tag/0.9.5).


## New version of Stepman (0.9.24)

In the previous `stepman` version, stepman generated a branch in your steplib for the new step. The created __branch name was the step's id__.

In this case, if bitrise-team asked for changes in the step and the contributor shared a new version of the step, it was pushed to the previously created branch (even if the step version had been updated).

Merging these pull request would mean that both the old step version (still containing issues) and the new fixed one would merged into the steplib. Nobody in their right mind would want that to happen.

(In this cases removing the share branch before the re-share was the solution).

New stepman adds __step version to the step share branch__. New share branch layout: `STEP_ID-STEP_VERSION`.

This fix nicely eliminates the previously mentioned issue.

The team was also working on error message updates, to make error messages cleaner.

## New Steps

- üéâ __amazon-s3-uploader 1.0.1__ - now available both for iOS and Android
- üì± __aws-device-farm-file-deploy 0.0.2__
- üí° __lifx-notifier 1.0.1__

## Step updates üõ†

- __carthage 2.4.0:__
  - Swift 3 / Xcode 8.0 support
  - __NEW INPUT:__ `github_access_token` - Use this input to sneakily avoid Github rate limit issues.
- __xamarin-builder 1.4.1:__
  - `xamarin-builder` tool update for proper exit status of build command
- __gradle-runner 1.5.2:__
  - fixed: APKs will be overwritten with the same name after build
  - fixed: Arguments are not correctly escaped
  - mapping file find fix - empty include pattern will provide 0 mapping file, instead of every file in the directory
- __certificate-and-profile-installer 1.7.0:__
  - you can now specify multiple `certificate_url` separated with pipe character
  - you can now specify multiple `certificate_passphrase` separated with pipe character
  - printing installed profile's infos
  - toolkit
- __hockeyapp-deploy-android 1.1.0:__
  - multiline notes
  - error check fix
  - step.yml update
  - toolkit
- __xamarin-user-management 1.0.3:__
  - `run_if: .IsCI`
- __xcode-test 1.16.1:__
  - __REMOVED_INPUT:__ `test_results_file_path` - Use xcpretty_test_options to control test result path (and other xcpretty options)
  - __NEW INPUT:__ `xcpretty_test_options` - Additional options for xcpretty test call
  - __NEW INPUT:__ `should_retry_test_on_fail` - (experimental) Rerun test, when it fails?
  - __NEW INPUT:__ `should_build_before_test` - Offer opt-out for redundant build before performing test
  - new automatic retry patterns
  - if `output_tool=xcpretty`, then raw xcodebuild output's path will exported in `BITRISE_XCODE_RAW_RESULT_TEXT_PATH` environment variable
  - step.yml updates
  - toolkit
- __project-scanner 0.11.0:__
  - warning message updates
  - print warning instead of fail
  - format version update to 1.3.0
  - new trigger map
  - new iOS workflow: separated `CI` and `deploy` workflows
  - add xcode-test step to iOS deploy workflow as well
  - step version updates
- __fabric-crashlytics-beta-deploy 2.2.0:__
  - allow to upload only dSYM
- __xcode-archive 1.10.1:__
  - __BREAKING:__ `export_options_path` removed, instead use: `custom_export_options_plist_content` - Custom export options plist content
  - step output improvements in case of custom export options
  - remove template from mktemp calls
  - if `output_tool=xcpretty`, then raw xcodebuild output's path will exported in `BITRISE_XCODE_RAW_RESULT_TEXT_PATH` environment variable
- __deploy-to-itunesconnect-deliver 2.6.2:__
  - step title now includes `TestFlight`, because being old school is cool üï∂
  - added `TestFlight` to more places in descriptions (same reason as above)
- __deploy-to-itunesconnect-shenzhen 2.1.2:__
  - step description changes
- __sign-apk 1.1.0:__
  - export signed apk path in `BITRISE_APK_PATH` env
  - toolkit
- __git-clone 3.4.0:__
  - generic pull request support
- __xcode-archive-mac 1.3.1:__
  - .app file zipping fix
